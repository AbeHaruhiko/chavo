/// <reference path="../../../.tmp/typings/tsd.d.ts" />
Parse.Cloud.define('hello', function (request, response) {
    response.success('Hello world!');
});
Parse.Cloud.define('toggleLike', function (request, response) {
    Parse.Cloud.useMasterKey();
    var voice = request.params.voice;
    // ↓のトグルはローカルで実施済み
    // voice.like = !voice.like;
    var ParseVoice = Parse.Object.extend('Voice');
    var parseVoice = new ParseVoice();
    parseVoice.id = voice.objectId;
    if (voice.like) {
        request.user.addUnique('likes', voice.objectId);
        parseVoice.increment('likeCount');
    }
    else {
        request.user.remove('likes', voice.objectId);
        parseVoice.increment('likeCount', -1);
    }
    request.user.save()
        .then(function (user) {
        console.log('user: ' + user);
        console.log('likes: ' + user.get('likes'));
        return parseVoice.save();
    }, function (error) {
        console.error('Error: ' + error.code + ' ' + error.message);
        response.error('Error: ' + error.code + ' ' + error.message);
    })
        .then(function (parseVoice) {
        console.log('likeCound: ' + parseVoice.get('likeCount'));
        response.success(parseVoice.get('likeCount'));
    }, function (error) {
        console.error('Error: ' + error.code + ' ' + error.message);
        response.error('Error: ' + error.code + ' ' + error.message);
    });
});

//# sourceMappingURL=data:application/json;base64,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ZW5jZSBwYXRoPVwiLi4vLi4vLi4vLnRtcC90eXBpbmdzL3RzZC5kLnRzXCIgLz5cblxuUGFyc2UuQ2xvdWQuZGVmaW5lKCdoZWxsbycsIGZ1bmN0aW9uKHJlcXVlc3Q6IFBhcnNlLkNsb3VkLkZ1bmN0aW9uUmVxdWVzdCwgcmVzcG9uc2U6IFBhcnNlLkNsb3VkLkZ1bmN0aW9uUmVzcG9uc2UpIHtcbiAgcmVzcG9uc2Uuc3VjY2VzcygnSGVsbG8gd29ybGQhJyk7XG59KTtcblxuUGFyc2UuQ2xvdWQuZGVmaW5lKCd0b2dnbGVMaWtlJywgZnVuY3Rpb24ocmVxdWVzdDogUGFyc2UuQ2xvdWQuRnVuY3Rpb25SZXF1ZXN0LCByZXNwb25zZTogUGFyc2UuQ2xvdWQuRnVuY3Rpb25SZXNwb25zZSkge1xuXG4gIFBhcnNlLkNsb3VkLnVzZU1hc3RlcktleSgpO1xuICB2YXIgdm9pY2UgPSByZXF1ZXN0LnBhcmFtcy52b2ljZTtcbiAgLy8g4oaT44Gu44OI44Kw44Or44Gv44Ot44O844Kr44Or44Gn5a6f5pa95riI44G/XG4gIC8vIHZvaWNlLmxpa2UgPSAhdm9pY2UubGlrZTtcblxuICB2YXIgUGFyc2VWb2ljZSA9IFBhcnNlLk9iamVjdC5leHRlbmQoJ1ZvaWNlJyk7XG4gIHZhciBwYXJzZVZvaWNlID0gbmV3IFBhcnNlVm9pY2UoKTtcbiAgcGFyc2VWb2ljZS5pZCA9IHZvaWNlLm9iamVjdElkO1xuXG4gIGlmICh2b2ljZS5saWtlKSB7XG4gICAgcmVxdWVzdC51c2VyLmFkZFVuaXF1ZSgnbGlrZXMnLCB2b2ljZS5vYmplY3RJZCk7XG4gICAgcGFyc2VWb2ljZS5pbmNyZW1lbnQoJ2xpa2VDb3VudCcpO1xuICB9IGVsc2Uge1xuICAgIHJlcXVlc3QudXNlci5yZW1vdmUoJ2xpa2VzJywgdm9pY2Uub2JqZWN0SWQpO1xuICAgIHBhcnNlVm9pY2UuaW5jcmVtZW50KCdsaWtlQ291bnQnLCAtMSk7XG4gIH1cblxuICByZXF1ZXN0LnVzZXIuc2F2ZSgpXG4gIC50aGVuKCh1c2VyOiBQYXJzZS5Vc2VyKSA9PiB7XG4gICAgY29uc29sZS5sb2coJ3VzZXI6ICcgKyB1c2VyKTtcbiAgICBjb25zb2xlLmxvZygnbGlrZXM6ICcgKyB1c2VyLmdldCgnbGlrZXMnKSk7XG4gICAgcmV0dXJuIHBhcnNlVm9pY2Uuc2F2ZSgpO1xuICB9LFxuICAoZXJyb3I6IFBhcnNlLkVycm9yKSA9PiB7XG4gICAgY29uc29sZS5lcnJvcignRXJyb3I6ICcgKyBlcnJvci5jb2RlICsgJyAnICsgZXJyb3IubWVzc2FnZSk7XG5cbiAgICByZXNwb25zZS5lcnJvcignRXJyb3I6ICcgKyBlcnJvci5jb2RlICsgJyAnICsgZXJyb3IubWVzc2FnZSk7XG4gIH0pXG4gIC50aGVuKChwYXJzZVZvaWNlOiBQYXJzZS5PYmplY3QpID0+IHtcbiAgICBjb25zb2xlLmxvZygnbGlrZUNvdW5kOiAnICsgcGFyc2VWb2ljZS5nZXQoJ2xpa2VDb3VudCcpKTtcbiAgICByZXNwb25zZS5zdWNjZXNzKHBhcnNlVm9pY2UuZ2V0KCdsaWtlQ291bnQnKSk7XG4gIH0sXG4gIChlcnJvcjogUGFyc2UuRXJyb3IpID0+IHtcbiAgICBjb25zb2xlLmVycm9yKCdFcnJvcjogJyArIGVycm9yLmNvZGUgKyAnICcgKyBlcnJvci5tZXNzYWdlKTtcblxuICAgIHJlc3BvbnNlLmVycm9yKCdFcnJvcjogJyArIGVycm9yLmNvZGUgKyAnICcgKyBlcnJvci5tZXNzYWdlKTtcbiAgfSk7XG5cbn0pO1xuIl0sInNvdXJjZVJvb3QiOiIvc291cmNlLyJ9